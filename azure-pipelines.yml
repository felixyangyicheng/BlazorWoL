# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: './WoL.sln'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: nbgv cloud -c -a
  displayName: Set Version / NBGV

- script: dotnet restore "$(solution)"
  displayName: dotnet restore -r win-x86 -r win-arm -r linux-x64

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    arguments: '-c Release --no-restore'

# FDD

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    modifyOutputPath: false
    publishWebProjects: true
    arguments: '-c Release --no-restore --output $(Build.ArtifactStagingDirectory)/fdd'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/fdd'
    artifact: 'fdd'

# Win x86 (x64 just uses more space and ram)

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    modifyOutputPath: false
    publishWebProjects: true
    arguments: '-c Release --no-restore -r win-x86 --self-contained /p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/win-x86'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/win-x86'
    artifact: 'win-x86'

# Win x86 non-single-file for hosting in IIS

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    modifyOutputPath: false
    publishWebProjects: true
    arguments: '-c Release --no-restore -r win-x86 --self-contained --output $(Build.ArtifactStagingDirectory)/win-x86-iis'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/win-x86-iis'
    artifact: 'win-x86-iis'

# Win ARM (IoT Core / Raspberry PI)

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    modifyOutputPath: false
    publishWebProjects: true
    arguments: '-c Release --no-restore -r win-arm --self-contained /p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/win-arm'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/win-arm'
    artifact: 'win-arm'

# Linux x64

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    modifyOutputPath: false
    publishWebProjects: true
    arguments: '-c Release --no-restore -r linux-x64 --self-contained /p:PublishSingleFile=true --output $(Build.ArtifactStagingDirectory)/linux-x64'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/linux-x64'
    artifact: 'linux-x64'
